usethis::use_data_raw()
require(tidyverse)
fix.window = read_delim("Data/ET_fix_-800_to_0.txt", delim="\t")
fix.timecourse = read_delim("Data/ET_fix.txt", delim="\t")
fix.window = read_delim("Data/ET_fix_-800_to_0.txt", delim="\t")
fix.timecourse = read_delim("Data/ET_fix.txt", delim="\t")
usethis::use_data(fix.timecourse, overwrite = TRUE)
fix.window = read_delim("Data_original/ET_fix_-800_to_0.txt", delim="\t")
fix.timecourse = read_delim("Data_original/ET_fix.txt", delim="\t")
## code to prepare `DATASET` dataset goes here
usethis::use_data(fix.window, overwrite = TRUE)
usethis::use_data(fix.timecourse, overwrite = TRUE)
devtools::load_all(".")
head(fix.window)
require(tidyverse)
fix.window = read_delim("ET_fix_-800_to_0.txt", delim="\t")
require(tidyverse)
fix.window = read_delim("data-raw/ET_fix_-800_to_0.txt", delim="\t")
fix.50bin = read_delim("data-raw/ET_fix.txt", delim="\t")
fix.binom.20bin = read_delim("data-raw/ET_binomfix_bin20ms.txt", delim="\t")
fix.binom.50bin = read_delim("data-raw/ET_binomfix.txt", delim="\t")
summary(fix.window)
fix.window = fix.window %>% mutate_at(vars(Subject,Condition,Item,Lang), as.factor)
summary(fix.window)
fix.window = fix.window %>% mutate_at(vars(Subject,Condition,Item,Lang), as.factor) %>%
mutate(Condition = fct_relevel(Condition,c('Targ','Eng','Jap','Unr')))
summary(fix.window)
summary(fix.50bin)
fix.50bin = fix.50bin %>% mutate_at(vars(Subject,Condition,Item,Lang), as.factor) %>%
mutate(Condition = fct_relevel(Condition,c('Targ','Eng','Jap','Unr')))
summary(fix.50bin)
summary(fix.binom.20bin)
fix.binom.20bin = fix.binom.20bin %>% mutate_at(vars(Subject,Condition,Item,Lang), as.factor) %>%
mutate(Condition = fct_relevel(Condition,c('Targ','Eng','Jap','Unr')))
summary(fix.binom.20bin)
summary(fix.binom.50bin)
fix.binom.50bin = fix.binom.50bin %>% mutate_at(vars(Subject,Condition,Item,Lang), as.factor) %>%
mutate(Condition = fct_relevel(Condition,c('Targ','Eng','Jap','Unr')))
summary(fix.binom.50bin)
### export the data as .rds files to the data/ folder
usethis::use_data(fix.window, overwrite = TRUE)
usethis::use_data(fix.50bin, overwrite = TRUE)
usethis::use_data(fix.binom.20bin, overwrite = TRUE)
usethis::use_data(fix.binom.50bin, overwrite = TRUE)
devtools::load_all(".")
head(fix.window)
head(fix.binom.50bin)
usethis::use_r("fix.window")
head(fix.window)
str(fix.window)
describe(fix.window)
devtools::document()
devtools::document()
head(fix.50bin)
summary(fix.50bin)
devtools::document()
summary(fix.binom.20bin)
summary(fix.binom.50bin)
devtools::document()
devtools::document()
?fix.window
?fix.50bin
devtools::document()
?fix.binom.50bin
?fix.50bin
devtools::document()
?fix.window
devtools::document()
[commit]
?tidyverse
devtools::check(document=FALSE)
usethis::use_package_doc()
usethis::use_tibble()
devtools::document()
?stats.VWP
?stats.VWP
usethis::use_package_doc()
?stats.VWP
usethis::use_tibble()
devtools::document()
?stats.VWP
devtools::install()
fix.window
usethis::use_tutorial("Session3", "Session3", open = interactive())
devtools::install()
learnr::run_tutorial("Session3", "Session3")
learnr::run_tutorial("Session3", "stats.VWP")
learnr::run_tutorial("Session3", "stats.VWP")
devtools::install()
learnr::run_tutorial("Session3", "stats.VWP")
View(fix.timecourse)
devtools::document()
devtools::install()
install.packages("remotes")
usethis::use_data_raw()
## code to prepare `DATASET` dataset goes here
require(tidyverse)
## code to prepare `DATASET` dataset goes here
require(tidyverse)
fix.window.raw = read_delim("data-raw/ET_fix_-800_to_0.txt", delim="\t")
fix.50bin.raw = read_delim("data-raw/ET_fix.txt", delim="\t")
fix.window.raw = read_delim("data-raw/ET_binomfix_bin20ms.txt", delim="\t")
fix.50bin.raw = read_delim("data-raw/ET_binomfix.txt", delim="\t")
usethis::use_data(DATASET, overwrite = TRUE)
?use_data
## code to prepare `DATASET` dataset goes here
require(tidyverse)
fix.window.raw = read_delim("data-raw/ET_fix_-800_to_0.txt", delim="\t")
fix.50bin.raw = read_delim("data-raw/ET_fix.txt", delim="\t")
fix.window.raw = read_delim("data-raw/ET_binomfix_bin20ms.txt", delim="\t")
fix.50bin.raw = read_delim("data-raw/ET_binomfix.txt", delim="\t")
usethis::use_data(c(fix.window.raw,fix.50bin.raw,fix.window.raw,fix.50bin.raw), overwrite = TRUE)
## code to prepare `DATASET` dataset goes here
require(tidyverse)
fix.window.raw = read_delim("data-raw/ET_fix_-800_to_0.txt", delim="\t")
fix.50bin.raw = read_delim("data-raw/ET_fix.txt", delim="\t")
fix.window.raw = read_delim("data-raw/ET_binomfix_bin20ms.txt", delim="\t")
fix.50bin.raw = read_delim("data-raw/ET_binomfix.txt", delim="\t")
usethis::use_data(fix.window.raw, overwrite = TRUE)
## code to prepare `DATASET` dataset goes here
require(tidyverse)
fix.window.raw = read_delim("data-raw/ET_fix_-800_to_0.txt", delim="\t")
fix.50bin.raw = read_delim("data-raw/ET_fix.txt", delim="\t")
fix.binom.20bin.raw = read_delim("data-raw/ET_binomfix_bin20ms.txt", delim="\t")
fix.binom.50bin.raw = read_delim("data-raw/ET_binomfix.txt", delim="\t")
usethis::use_data(fix.window.raw, overwrite = TRUE)
usethis::use_data(fix.50bin.raw, overwrite = TRUE)
usethis::use_data(fix.binom.20bin.raw, overwrite = TRUE)
usethis::use_data(fix.binom.50bin.raw, overwrite = TRUE)
remotes::install_github("aineito/stats.VWP")
devtools::install()
usethis::use_tutorial("Session6", "Growth Curve Analysis")
?droplevels()
?poly
head(fix.binom.50bin)
require(stats.VWP)
head(fix.binom.50bin)
?fix.binom.50bin
fix.binom.pred = fix.binom.50bin %>% filter(Time >= -800, Time < 0, Condition %in% c('Targ','Eng','Unr')) %>% droplevels()
require(learnr)
require(Rmisc)
require(tidyverse)
require(ggplot2)
fix.binom.pred = fix.binom.50bin %>% filter(Time >= -800, Time < 0, Condition %in% c('Targ','Eng','Unr')) %>% droplevels()
a = poly((unique(fix.binom.pred$Bin)), 2)
a
a = poly((unique(fix.binom.pred$Time)), 2)
a
View('a')
View(a)
head(fix.binom.pred)
install.packages("gazer")
require(remotes)
remotes::install_github("dmirman/gazer")
?code_poly
require(gazer)
?code_poly
fix.binom.pred = code_poly(df=fix.binom.pred, predictor="Time", poly.order=2, orthogonal=T, draw.poly=T)
View(fix.binom.pred)
contrasts(fix.binom.pred$Condition)
contrasts(fix.binom.pred$Lang)
fix.binom.pred.m0 = glmer(Count ~ (poly1+poly2) * Condition * Lang + (1|Subject) + (1|Item), family=binomial, data=fix.binom.pred)
library(learnr)
require(Rmisc)
require(tidyverse)
require(ggplot2)
require(lme4)
require(stats.VWP)
fix.binom.pred.m0 = glmer(Count ~ (poly1+poly2) * Condition * Lang + (1|Subject) + (1|Item), family=binomial, data=fix.binom.pred)
fix.binom.pred = fix.binom.50bin %>% filter(Time >= -800, Time < 0, Condition %in% c('Targ','Eng','Unr')) %>% droplevels()
fix.binom.pred = code_poly(df=fix.binom.pred, predictor="Time", poly.order=2, orthogonal=T, draw.poly=T)
require(gazer)
fix.binom.pred = code_poly(df=fix.binom.pred, predictor="Time", poly.order=2, orthogonal=T, draw.poly=T)
summary(fix.binom.pred)
contrasts(fix.binom.pred$Condition)
contrasts(fix.binom.pred$Lang)
contrasts(fix.binom.pred$Condition) = matrix(c(1,0,0,0,1,0),ncol=2)
contrasts(fix.binom.pred$Lang) = contr.sum(2)
contrasts(fix.binom.pred$Condition)
contrasts(fix.binom.pred$Lang)
summary(fix.binom.pred)
fix.binom.pred.m0 = glmer(Count ~ (poly1+poly2) * Condition * Lang + (1|Subject) + (1|Item), family=binomial, data=fix.binom.pred)
summary(fix.binom.pred.m0)
coef(fix.binom.pred.m0)
coefficients(fix.binom.pred.m0)
summary(fix.binom.pred.m0$coef)
coef(summary(fix.binom.pred.m0))
1000000
100000
0.000001
fix.binom.pred[fix.binom.pred$Lang=='L1',]
fix.binom.pred[fix.binom.pred$Lang=='L1']
require(learnr)
require(usethis)
require(devtools)
require(usethis)
usethis::use_tutorial("Session9", "Cluster-based permutation analysis")
## code to prepare `DATASET` dataset goes here
require(tidyverse)
fix.window.raw = read_delim("data-raw/ET_fix_-800_to_0.txt", delim="\t")
fix.50bin.raw = read_delim("data-raw/ET_fix_bin50ms.txt", delim="\t")
fix.binom.20bin.raw = read_delim("data-raw/ET_binomfix_bin20ms.txt", delim="\t")
fix.binom.50bin.raw = read_delim("data-raw/ET_binomfix_bin50ms.txt", delim="\t")
usethis::use_data(fix.window.raw, overwrite = TRUE)
usethis::use_data(fix.50bin.raw, overwrite = TRUE)
usethis::use_data(fix.binom.20bin.raw, overwrite = TRUE)
usethis::use_data(fix.binom.50bin.raw, overwrite = TRUE)
View(fix.window.raw)
View(fix.50bin.raw)
View(fix.binom.20bin.raw)
## code to prepare `DATASET` dataset goes here
require(tidyverse)
fix.window.raw = read_delim("data-raw/ET_fix_-800_to_0.txt", delim="\t")
fix.50bin.raw = read_delim("data-raw/ET_fix_bin50ms.txt", delim="\t")
fix.binom.20bin.raw = read_delim("data-raw/ET_binomfix_bin20ms.txt", delim="\t")
fix.binom.50bin.raw = read_delim("data-raw/ET_binomfix_bin50ms.txt", delim="\t")
usethis::use_data(fix.window.raw, overwrite = TRUE)
usethis::use_data(fix.50bin.raw, overwrite = TRUE)
usethis::use_data(fix.binom.20bin.raw, overwrite = TRUE)
usethis::use_data(fix.binom.50bin.raw, overwrite = TRUE)
View(fix.50bin.raw)
fix.window = fix.window.raw %>% mutate_at(vars(Subject, Condition, Item, Lang), as.factor) %>%
mutate(Condition = fct_relevel(Condition,c('Targ','Eng','Jap','Unr')))
fix.50bin = fix.50bin.raw %>% mutate_at(vars(Subject, Condition, Item, Lang), as.factor) %>%
mutate(Condition = fct_relevel(Condition,c('Targ','Eng','Jap','Unr')))
fix.binom.20bin = fix.binom.20bin.raw %>% mutate_at(vars(Subject, Condition, Item, Lang), as.factor) %>%
mutate(Condition = fct_relevel(Condition,c('Targ','Eng','Jap','Unr')))
fix.binom.50bin = fix.binom.50bin.raw %>% mutate_at(vars(Subject, Condition, Item, Lang), as.factor) %>%
mutate(Condition = fct_relevel(Condition,c('Targ','Eng','Jap','Unr')))
usethis::use_data(fix.window, overwrite = TRUE)
usethis::use_data(fix.50bin, overwrite = TRUE)
usethis::use_data(fix.binom.20bin, overwrite = TRUE)
usethis::use_data(fix.binom.50bin, overwrite = TRUE)
remotes::install_github("aineito/stats.VWP")
View(fix.50bin)
# code to prepare `DATASET` dataset goes here
require(tidyverse)
fix.window.raw = read_delim("data-raw/ET_fix_-800_to_0.txt", delim="\t")
fix.50bin.raw = read_delim("data-raw/ET_fix_bin50ms.txt", delim="\t")
fix.binom.20bin.raw = read_delim("data-raw/ET_binomfix_bin20ms.txt", delim="\t")
fix.binom.50bin.raw = read_delim("data-raw/ET_binomfix_bin50ms.txt", delim="\t")
usethis::use_data(fix.window.raw, overwrite = TRUE)
usethis::use_data(fix.50bin.raw, overwrite = TRUE)
usethis::use_data(fix.binom.20bin.raw, overwrite = TRUE)
usethis::use_data(fix.binom.50bin.raw, overwrite = TRUE)
fix.window = fix.window.raw %>% mutate_at(vars(Subject, Condition, Item, Lang), as.factor) %>%
mutate(Condition = fct_relevel(Condition,c('Targ','Eng','Jap','Unr')))
fix.50bin = fix.50bin.raw %>% mutate_at(vars(Subject, Condition, Item, Lang), as.factor) %>%
mutate(Condition = fct_relevel(Condition,c('Targ','Eng','Jap','Unr')))
fix.binom.20bin = fix.binom.20bin.raw %>% mutate_at(vars(Subject, Condition, Item, Lang), as.factor) %>%
mutate(Condition = fct_relevel(Condition,c('Targ','Eng','Jap','Unr')))
fix.binom.50bin = fix.binom.50bin.raw %>% mutate_at(vars(Subject, Condition, Item, Lang), as.factor) %>%
mutate(Condition = fct_relevel(Condition,c('Targ','Eng','Jap','Unr')))
usethis::use_data(fix.window, overwrite = TRUE)
usethis::use_data(fix.50bin, overwrite = TRUE)
usethis::use_data(fix.binom.20bin, overwrite = TRUE)
usethis::use_data(fix.binom.50bin, overwrite = TRUE)
remotes::install_github("aineito/stats.VWP")
require(stats.VWP)
?fix.50bin
View(fix.50bin)
devtools::document()
?fix.50bin
devtools::document()
?fix.50bin
require(usethis)
usethis::use_tutorial("Session11", "Divergence point analysis")
View(fix.binom.20bin.raw)
View(fix.binom.50bin.raw)
View(fix.binom.50bin)
View(fix.binom.20bin.raw)
View(fix.binom.20bin)
?fix.binom.20bin
require(stats.VWP)
?fix.binom.20bin
summary(fix.binom.20bin)
library(stats.VWP)
?pnorm
require(usethis)
usethis::use_tutorial("Session4", "LME/ GLMM analysis")
require(lme4)
?glmer
install.packages("gitcreds")
require(gitcreds)
gitcreds_set()
gitcreds_set()
library(stats.VWP)
library(stats.VWP)
knitr::opts_chunk$set(echo = TRUE)
require(learnr)
require(Rmisc)
require(tidyverse)
require(ggplot2)
require(stats.VWP)
summary(fix.window.raw)
summary(fix.50bin.raw)
?fix.50bin.raw
?fix.50bin
summary(fix.50bin)
?fix.window
summary(fix.window)
?fix.binom.20bin
summary(fix.binom.20bin)
summary(fix.binom.50bin)
summary(fix.window.raw)
log(0)
log(.5)
log(1.5)
3 > 2
test = c(TRUE,FALSE,TRUE)
test
sum(test)
test = c(FALSE, FALSE, TRUE, TRUE)
test
which(test)[1]
